{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, Teleport as _Teleport, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"column\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Додати витрати\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button\",\n  type: \"submit\"\n}, \" Додати \", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  class: \"column\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Список витрат\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_custom_input = _resolveComponent(\"custom-input\");\n  const _component_spending_table = _resolveComponent(\"spending-table\");\n  const _component_main_loader = _resolveComponent(\"main-loader\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"spending\", {\n      'single-column': !$options.hasExpenses\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    novalidate: \"\",\n    onSubmit: _cache[0] || (_cache[0] = (...args) => $options.sendSpending && $options.sendSpending(...args))\n  }, [_hoisted_2, _createVNode(_component_custom_input, {\n    id: \"foodExpense\",\n    label: \"Їжа\",\n    value: $data.foodExpense,\n    error: $data.errors.foodExpense,\n    onChangeField: $options.changeField\n  }, null, 8 /* PROPS */, [\"value\", \"error\", \"onChangeField\"]), _createVNode(_component_custom_input, {\n    id: \"utilityExpense\",\n    label: \"Комунальні витрати\",\n    value: $data.utilityExpense,\n    error: $data.errors.utilityExpense,\n    onChangeField: $options.changeField\n  }, null, 8 /* PROPS */, [\"value\", \"error\", \"onChangeField\"]), _createVNode(_component_custom_input, {\n    id: \"otherExpense\",\n    label: \"Інші витрати\",\n    value: $data.otherExpense,\n    error: $data.errors.otherExpense,\n    onChangeField: $options.changeField\n  }, null, 8 /* PROPS */, [\"value\", \"error\", \"onChangeField\"]), _createVNode(_component_custom_input, {\n    id: \"dateExpensePersonal\",\n    label: \"Дата\",\n    type: \"date\",\n    value: $data.dateExpensePersonal,\n    error: $data.errors.dateExpensePersonal,\n    onChangeField: $options.changeField\n  }, null, 8 /* PROPS */, [\"value\", \"error\", \"onChangeField\"]), _hoisted_3], 32 /* NEED_HYDRATION */)]), $options.hasExpenses ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createCommentVNode(\"      <table class=\\\"data-table\\\">\"), _createCommentVNode(\"        <thead>\"), _createCommentVNode(\"          <tr>\"), _createCommentVNode(\"            <th>Їжа</th>\"), _createCommentVNode(\"            <th>Комунальні</th>\"), _createCommentVNode(\"            <th>Інші</th>\"), _createCommentVNode(\"            <th>Дата</th>\"), _createCommentVNode(\"            <th></th>\"), _createCommentVNode(\"          </tr>\"), _createCommentVNode(\"        </thead>\"), _createCommentVNode(\"        <tbody>\"), _createCommentVNode(\"          <tr\"), _createCommentVNode(\"              v-for=\\\"expense in expenses\\\"\"), _createCommentVNode(\"              :key=\\\"expense.id\\\"\"), _createCommentVNode(\"              :class=\\\"{ 'not-editable': !checkIsEditingExpense(expense.id) }\\\"\"), _createCommentVNode(\"          >\"), _createCommentVNode(\"            <td>\"), _createCommentVNode(\"              {{ !checkIsEditingExpense(expense.id) }}\"), _createCommentVNode(\"              <custom-input\"), _createCommentVNode(\"                :id=\\\"`${expense.id}-${expense.foodExpense}`\\\"\"), _createCommentVNode(\"                :value=\\\"expense.foodExpense\\\"\"), _createCommentVNode(\"                @change-field=\\\"changeExpenseField()\\\"\"), _createCommentVNode(\"              />\"), _createCommentVNode(\"            </td>\"), _createCommentVNode(\"            <td>\"), _createCommentVNode(\"              <custom-input\"), _createCommentVNode(\"                :id=\\\"`${expense.id}-${expense.utilityExpense}`\\\"\"), _createCommentVNode(\"                :value=\\\"expense.utilityExpense\\\"\"), _createCommentVNode(\"                @change-field=\\\"changeExpenseField\\\"\"), _createCommentVNode(\"              />\"), _createCommentVNode(\"            </td>\"), _createCommentVNode(\"            <td>\"), _createCommentVNode(\"              <custom-input\"), _createCommentVNode(\"                :id=\\\"`${expense.id}-${expense.otherExpense}`\\\"\"), _createCommentVNode(\"                :value=\\\"expense.otherExpense\\\"\"), _createCommentVNode(\"                @change-field=\\\"changeExpenseField\\\"\"), _createCommentVNode(\"              />\"), _createCommentVNode(\"            </td>\"), _createCommentVNode(\"            <td>\"), _createCommentVNode(\"              <custom-input\"), _createCommentVNode(\"                :id=\\\"`${expense.id}-${expense.dateExpensePersonal}`\\\"\"), _createCommentVNode(\"                :value=\\\"expense.dateExpensePersonal\\\"\"), _createCommentVNode(\"                type=\\\"date\\\"\"), _createCommentVNode(\"                @change-field=\\\"changeExpenseField\\\"\"), _createCommentVNode(\"              />\"), _createCommentVNode(\"            </td>\"), _createCommentVNode(\"            <td>\"), _createCommentVNode(\"              <action-buttons\"), _createCommentVNode(\"                :is-editing=\\\"checkIsEditingExpense(expense.id)\\\"\"), _createCommentVNode(\"                @set-editing=\\\"setIsEditingExpense(expense.id)\\\"\"), _createCommentVNode(\"                @cancel-editing=\\\"setIsEditingExpense('')\\\"\"), _createCommentVNode(\"                @remove=\\\"removeExpense(expense.id)\\\"\"), _createCommentVNode(\"                @save=\\\"updateExpense(expense.id)\\\"\"), _createCommentVNode(\"              />\"), _createCommentVNode(\"            </td>\"), _createCommentVNode(\"          </tr>\"), _createCommentVNode(\"        </tbody>\"), _createCommentVNode(\"      </table>\"), _createVNode(_component_spending_table, {\n    expenses: $data.expenses,\n    onUpdateExpense: $options.updateExpense,\n    onRemoveExpense: $options.removeExpense\n  }, null, 8 /* PROPS */, [\"expenses\", \"onUpdateExpense\", \"onRemoveExpense\"])])) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createBlock(_Teleport, {\n    to: \"body\"\n  }, [$data.isLoading ? (_openBlock(), _createBlock(_component_main_loader, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)]))], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementVNode","type","key","_createElementBlock","_normalizeClass","$options","hasExpenses","_hoisted_1","novalidate","onSubmit","_cache","args","sendSpending","_hoisted_2","_createVNode","_component_custom_input","id","label","value","$data","foodExpense","error","errors","onChangeField","changeField","utilityExpense","otherExpense","dateExpensePersonal","_hoisted_3","_hoisted_4","_hoisted_5","_createCommentVNode","_component_spending_table","expenses","onUpdateExpense","updateExpense","onRemoveExpense","removeExpense","_createBlock","_Teleport","to","isLoading","_component_main_loader"],"sources":["/Users/uriiponomarenko/Downloads/Accounting-change-backend/js/src/pages/Spending/SpendingPage.vue"],"sourcesContent":["<template>\n  <div\n      class=\"spending\"\n      :class=\"{ 'single-column': !hasExpenses }\"\n  >\n    <div class=\"column\">\n      <form\n        novalidate\n        @submit=\"sendSpending\"\n      >\n        <h2>Додати витрати</h2>\n        <custom-input\n          id=\"foodExpense\"\n          label=\"Їжа\"\n          :value=\"foodExpense\"\n          :error=\"errors.foodExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"utilityExpense\"\n          label=\"Комунальні витрати\"\n          :value=\"utilityExpense\"\n          :error=\"errors.utilityExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"otherExpense\"\n          label=\"Інші витрати\"\n          :value=\"otherExpense\"\n          :error=\"errors.otherExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"dateExpensePersonal\"\n          label=\"Дата\"\n          type=\"date\"\n          :value=\"dateExpensePersonal\"\n          :error=\"errors.dateExpensePersonal\"\n          @change-field=\"changeField\"\n        />\n        <button\n          class=\"button\"\n          type=\"submit\"\n        >\n          Додати\n        </button>\n      </form>\n    </div>\n    <div class=\"column\" v-if=\"hasExpenses\">\n      <h2>Список витрат</h2>\n<!--      <table class=\"data-table\">-->\n<!--        <thead>-->\n<!--          <tr>-->\n<!--            <th>Їжа</th>-->\n<!--            <th>Комунальні</th>-->\n<!--            <th>Інші</th>-->\n<!--            <th>Дата</th>-->\n<!--            <th></th>-->\n<!--          </tr>-->\n<!--        </thead>-->\n<!--        <tbody>-->\n<!--          <tr-->\n<!--              v-for=\"expense in expenses\"-->\n<!--              :key=\"expense.id\"-->\n<!--              :class=\"{ 'not-editable': !checkIsEditingExpense(expense.id) }\"-->\n<!--          >-->\n<!--            <td>-->\n<!--              {{ !checkIsEditingExpense(expense.id) }}-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.foodExpense}`\"-->\n<!--                :value=\"expense.foodExpense\"-->\n<!--                @change-field=\"changeExpenseField()\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.utilityExpense}`\"-->\n<!--                :value=\"expense.utilityExpense\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.otherExpense}`\"-->\n<!--                :value=\"expense.otherExpense\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.dateExpensePersonal}`\"-->\n<!--                :value=\"expense.dateExpensePersonal\"-->\n<!--                type=\"date\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <action-buttons-->\n<!--                :is-editing=\"checkIsEditingExpense(expense.id)\"-->\n<!--                @set-editing=\"setIsEditingExpense(expense.id)\"-->\n<!--                @cancel-editing=\"setIsEditingExpense('')\"-->\n<!--                @remove=\"removeExpense(expense.id)\"-->\n<!--                @save=\"updateExpense(expense.id)\"-->\n<!--              />-->\n<!--            </td>-->\n<!--          </tr>-->\n<!--        </tbody>-->\n<!--      </table>-->\n      <spending-table\n        :expenses=\"expenses\"\n        @update-expense=\"updateExpense\"\n        @remove-expense=\"removeExpense\"\n      />\n    </div>\n\n    <teleport to=\"body\">\n      <main-loader v-if=\"isLoading\" />\n    </teleport>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nimport CustomInput from '@/components/CustomInput'\n// import ActionButtons from '@/components/ActionButtons'\nimport SpendingTable from './SpendingTable'\nimport MainLoader from '@/components/MainLoader'\n\nimport { hardcodedExpenses } from '../../../hardcodedData'\n\nexport default {\n  name: 'SpendingPage',\n\n  components: {\n    CustomInput,\n    // ActionButtons,\n    SpendingTable,\n    MainLoader\n  },\n\n  data() {\n    return {\n      foodExpense: '',\n      utilityExpense: '',\n      otherExpense: '',\n      dateExpensePersonal: '',\n      expenseType: {},\n      expenses: [], //Масив для збереження списку витрат\n      editingExpenseId: '',\n      errors: {},\n      isLoading: false\n    }\n  },\n\n  dateRegex: /^\\d{4}-\\d{2}-\\d{2}$/,\n\n  computed: {\n    hasExpenses() {\n      return this.expenses && this.expenses.length\n    }\n  },\n\n  mounted() {\n    //Викликаємо GET запит при завантаженні компонентів\n    this.getAllExpenses();\n  },\n\n  methods: {\n    // setIsEditingExpense(id) {\n    //   console.log('setIsEditingExpense: ', id);\n    //   this.editingExpenseId = id\n    // },\n    //\n    // checkIsEditingExpense(id) {\n    //   return this.editingExpenseId === id\n    // },\n\n    async updateExpense(expense) {\n      console.log('updateExpense expense: ', expense);\n      try {\n        this.isLoading = true\n\n        // TODO: Make api for the update expense\n        // await axios.put('/personal_expenses/api/expenses', expense)\n        await this.getAllExpenses()\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async removeExpense(id) {\n      console.log('removeExpense id: ', id);\n      try {\n        this.isLoading = true\n        console.log('Removed expense id: ', id);\n        // TODO: Make api for the delete expense by id\n        // await axios.delete('/personal_expenses/api/expenses', expenseId)\n        await this.getAllExpenses()\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async getAllExpenses() {\n      console.log('getAllExpenses', hardcodedExpenses);\n      try {\n        this.isLoading = true\n\n        const response = await axios.get('/personal_expenses/api/expenses')\n\n        this.expenses = response.data;\n        //this.expenses = hardcodedExpenses;\n        console.log('Список витрат успішно отриманий:', this.expenses);\n      } catch(error) {\n        console.error('Помилка при отриманні списку витрат:', error);\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    changeField({ fieldName, value }) {\n      this[fieldName] = value\n    },\n\n    validateDate() {\n      this.errors.dateExpensePersonal = ''\n\n      if (!this.dateExpensePersonal) {\n        this.errors.dateExpensePersonal = 'Не вказана дата'\n        return false\n      }\n\n      if (!this.$options.dateRegex.test(this.dateExpensePersonal)) {\n        this.errors.dateExpensePersonal = 'Невірний формат дати'\n        return false\n      }\n\n      return true\n    },\n\n    async sendSpending(e) {\n      e.preventDefault();\n\n      const isValid = this.validateDate()\n\n      if (!isValid) {\n        return\n      }\n\n      try {\n        this.isLoading = true\n\n        await axios.post('/personal_expenses/api/expenses', {\n          foodExpense: this.foodExpense,\n          utilityExpense: this.utilityExpense,\n          otherExpense: this.otherExpense,\n          dateExpensePersonal: this.dateExpensePersonal,\n        })\n\n        await this.getAllExpenses()\n      } catch (error) {\n        console.error('Помилка при додаванні витрати:', error);\n      } finally {\n        this.isLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../css/variables\";\n\n.spending {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n\n  &:after {\n    position: absolute;\n    left: 400px;\n    top: 0;\n    bottom: 0;\n    border-left: 1px solid $main;\n    content: '';\n  }\n\n  .column {\n    width: 400px;\n    padding: 20px;\n\n    &:last-child {\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: calc(100% - 400px);\n      overflow-y: auto;\n    }\n  }\n}\n\n.data-table {\n  width: 100%;\n  border-collapse:collapse;\n  border-spacing:0;\n\n  tr {\n    background: $alt-field-background;\n  }\n\n  tbody tr {\n    &:nth-child(odd) {\n      background: $field-background;\n    }\n  }\n\n  th,\n  td {\n    padding: 10px;\n\n    &:last-child {\n      width: 100px;\n    }\n  }\n\n  th {\n    text-align: left;\n    border-bottom: solid 1px $main;\n\n    &:nth-child(1) {\n      width: 100px;\n    }\n  }\n}\n\n@media (max-width: 1024px) {\n  .spending {\n    position: static;\n\n    &:after {\n      display: none;\n    }\n\n    .column,\n    .column:last-child {\n      position: static;\n      width: 100%;\n    }\n\n    .column:last-child {\n      border: 0;\n\n      &:before {\n        display: block;\n        border-top: solid 1px $main;\n        padding: 20px 0 0;\n        content: '';\n      }\n    }\n\n    &.single-column .column:last-child:before {\n      border: 0;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}