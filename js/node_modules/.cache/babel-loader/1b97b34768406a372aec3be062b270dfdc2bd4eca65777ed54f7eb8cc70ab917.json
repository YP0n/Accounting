{"ast":null,"code":"export default {\n  name: 'CustomInput',\n  props: {\n    id: {\n      type: String,\n      default: '',\n      required: true\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    changeField(e) {\n      const value = e.target.value;\n      if (value !== this.value) {\n        this.$emit('change-field', {\n          fieldName: this.id,\n          value\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","id","type","String","default","required","label","disabled","Boolean","value","error","methods","changeField","e","target","$emit","fieldName"],"sources":["/Users/uriiponomarenko/Downloads/Accounting-change-backend/js/src/components/CustomInput.vue"],"sourcesContent":["<template>\n  <div\n    class=\"custom-input\"\n    :class=\"{'has-error': error}\"\n  >\n    <label\n      v-if=\"label\"\n      :for=\"id\"\n    >\n      {{ label }}\n    </label>\n    <input\n      id=\"id\"\n      :type=\"type\"\n      :value=\"value\"\n      :disabled=\"disabled\"\n      autocomplete=\"off\"\n      @input=\"changeField\"\n      @change=\"changeField\"\n    />\n    <span v-if=\"error\" class=\"error\">\n      {{ error }}\n    </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CustomInput',\n\n  props: {\n    id: {\n      type: String,\n      default: '',\n      required: true\n    },\n    label: {\n      type: String,\n      default: ''\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    error: {\n      type: String,\n      default: ''\n    },\n  },\n\n  methods: {\n    changeField(e) {\n      const value = e.target.value\n\n      if(value !== this.value) {\n        this.$emit('change-field', {\n          fieldName: this.id,\n          value\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../css/variables.scss\";\n\n.custom-input {\n  padding: 0 0 20px;\n  overflow: hidden;\n  position: relative;\n\n  &.has-error input {\n    border-color: $error;\n  }\n\n  input {\n    float: left;\n    width: 100%;\n    height: 40px;\n    padding: 10px;\n    color: $main;\n    outline: none;\n    background: $field-background;\n    border: solid $main;\n    border-width: 0 0 1px;\n    transition: border-color 0.3s, background 0.3s;\n\n    &:focus {\n      background: $alt-field-background;\n    }\n  }\n}\n</style>"],"mappings":"AA2BA,eAAe;EACbA,IAAI,EAAE,aAAa;EAEnBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLJ,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDF,IAAI,EAAE;MACJA,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDG,QAAQ,EAAE;MACRL,IAAI,EAAEM,OAAO;MACbJ,OAAO,EAAE;IACX,CAAC;IACDK,KAAK,EAAE;MACLP,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDM,KAAK,EAAE;MACLR,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAEDO,OAAO,EAAE;IACPC,WAAWA,CAACC,CAAC,EAAE;MACb,MAAMJ,KAAI,GAAII,CAAC,CAACC,MAAM,CAACL,KAAI;MAE3B,IAAGA,KAAI,KAAM,IAAI,CAACA,KAAK,EAAE;QACvB,IAAI,CAACM,KAAK,CAAC,cAAc,EAAE;UACzBC,SAAS,EAAE,IAAI,CAACf,EAAE;UAClBQ;QACF,CAAC;MACH;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}