{"ast":null,"code":"import axios from 'axios';\nimport CustomInput from '@/components/CustomInput';\n// import ActionButtons from '@/components/ActionButtons'\nimport SpendingTable from './SpendingTable';\nimport MainLoader from '@/components/MainLoader';\nimport { hardcodedExpenses } from '../../../hardcodedData';\nexport default {\n  name: 'SpendingPage',\n  components: {\n    CustomInput,\n    // ActionButtons,\n    SpendingTable,\n    MainLoader\n  },\n  data() {\n    return {\n      foodExpense: '',\n      utilityExpense: '',\n      otherExpense: '',\n      dateExpensePersonal: '',\n      expenseType: {},\n      expenses: [],\n      //Масив для збереження списку витрат\n      editingExpenseId: '',\n      errors: {},\n      isLoading: false\n    };\n  },\n  dateRegex: /^\\d{4}-\\d{2}-\\d{2}$/,\n  computed: {\n    hasExpenses() {\n      return this.expenses && this.expenses.length;\n    }\n  },\n  mounted() {\n    //Викликаємо GET запит при завантаженні компонентів\n    this.getAllExpenses();\n  },\n  methods: {\n    // setIsEditingExpense(id) {\n    //   console.log('setIsEditingExpense: ', id);\n    //   this.editingExpenseId = id\n    // },\n    //\n    // checkIsEditingExpense(id) {\n    //   return this.editingExpenseId === id\n    // },\n\n    async updateExpense(expense) {\n      console.log('updateExpense expense: ', expense);\n      try {\n        this.isLoading = true;\n\n        // TODO: Make api for the update expense\n        // await axios.put('/personal_expenses/api/expenses', expense)\n        await this.getAllExpenses();\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async removeExpense(id) {\n      console.log('removeExpense id: ', id);\n      try {\n        this.isLoading = true;\n        console.log('Removed expense id: ', id);\n        // TODO: Make api for the delete expense by id\n        // await axios.delete('/personal_expenses/api/expenses', expenseId)\n        await this.getAllExpenses();\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async getAllExpenses() {\n      console.log('getAllExpenses', hardcodedExpenses);\n      try {\n        this.isLoading = true;\n\n        // const response = await axios.get('/personal_expenses/api/expenses')\n\n        // this.expenses = response.data;\n        this.expenses = hardcodedExpenses;\n        console.log('Список витрат успішно отриманий:', this.expenses);\n      } catch (error) {\n        console.error('Помилка при отриманні списку витрат:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    changeField({\n      fieldName,\n      value\n    }) {\n      this[fieldName] = value;\n    },\n    validateDate() {\n      this.errors.dateExpensePersonal = '';\n      if (!this.dateExpensePersonal) {\n        this.errors.dateExpensePersonal = 'Не вказана дата';\n        return false;\n      }\n      if (!this.$options.dateRegex.test(this.dateExpensePersonal)) {\n        this.errors.dateExpensePersonal = 'Невірний формат дати';\n        return false;\n      }\n      return true;\n    },\n    async sendSpending(e) {\n      e.preventDefault();\n      const isValid = this.validateDate();\n      if (!isValid) {\n        return;\n      }\n      try {\n        this.isLoading = true;\n        await axios.post('/personal_expenses/api/expenses', {\n          foodExpense: this.foodExpense,\n          utilityExpense: this.utilityExpense,\n          otherExpense: this.otherExpense,\n          dateExpensePersonal: this.dateExpensePersonal,\n          expenseType: this.expenseType.value\n        });\n        await this.getAllExpenses();\n      } catch (error) {\n        console.error('Помилка при додаванні витрати:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","CustomInput","SpendingTable","MainLoader","hardcodedExpenses","name","components","data","foodExpense","utilityExpense","otherExpense","dateExpensePersonal","expenseType","expenses","editingExpenseId","errors","isLoading","dateRegex","computed","hasExpenses","length","mounted","getAllExpenses","methods","updateExpense","expense","console","log","removeExpense","id","error","changeField","fieldName","value","validateDate","$options","test","sendSpending","e","preventDefault","isValid","post"],"sources":["/Users/uriiponomarenko/Downloads/Accounting-change-backend/js/src/pages/Spending/SpendingPage.vue"],"sourcesContent":["<template>\n  <div\n      class=\"spending\"\n      :class=\"{ 'single-column': !hasExpenses }\"\n  >\n    <div class=\"column\">\n      <form\n        novalidate\n        @submit=\"sendSpending\"\n      >\n        <h2>Додати витрати</h2>\n        <custom-input\n          id=\"foodExpense\"\n          label=\"Їжа\"\n          :value=\"foodExpense\"\n          :error=\"errors.foodExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"utilityExpense\"\n          label=\"Комунальні витрати\"\n          :value=\"utilityExpense\"\n          :error=\"errors.utilityExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"otherExpense\"\n          label=\"Інші витрати\"\n          :value=\"otherExpense\"\n          :error=\"errors.otherExpense\"\n          @change-field=\"changeField\"\n        />\n        <custom-input\n          id=\"dateExpensePersonal\"\n          label=\"Дата\"\n          type=\"date\"\n          :value=\"dateExpensePersonal\"\n          :error=\"errors.dateExpensePersonal\"\n          @change-field=\"changeField\"\n        />\n        <button\n          class=\"button\"\n          type=\"submit\"\n        >\n          Додати\n        </button>\n      </form>\n    </div>\n    <div class=\"column\" v-if=\"hasExpenses\">\n      <h2>Список витрат</h2>\n<!--      <table class=\"data-table\">-->\n<!--        <thead>-->\n<!--          <tr>-->\n<!--            <th>Їжа</th>-->\n<!--            <th>Комунальні</th>-->\n<!--            <th>Інші</th>-->\n<!--            <th>Дата</th>-->\n<!--            <th></th>-->\n<!--          </tr>-->\n<!--        </thead>-->\n<!--        <tbody>-->\n<!--          <tr-->\n<!--              v-for=\"expense in expenses\"-->\n<!--              :key=\"expense.id\"-->\n<!--              :class=\"{ 'not-editable': !checkIsEditingExpense(expense.id) }\"-->\n<!--          >-->\n<!--            <td>-->\n<!--              {{ !checkIsEditingExpense(expense.id) }}-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.foodExpense}`\"-->\n<!--                :value=\"expense.foodExpense\"-->\n<!--                @change-field=\"changeExpenseField()\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.utilityExpense}`\"-->\n<!--                :value=\"expense.utilityExpense\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.otherExpense}`\"-->\n<!--                :value=\"expense.otherExpense\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <custom-input-->\n<!--                :id=\"`${expense.id}-${expense.dateExpensePersonal}`\"-->\n<!--                :value=\"expense.dateExpensePersonal\"-->\n<!--                type=\"date\"-->\n<!--                @change-field=\"changeExpenseField\"-->\n<!--              />-->\n<!--            </td>-->\n<!--            <td>-->\n<!--              <action-buttons-->\n<!--                :is-editing=\"checkIsEditingExpense(expense.id)\"-->\n<!--                @set-editing=\"setIsEditingExpense(expense.id)\"-->\n<!--                @cancel-editing=\"setIsEditingExpense('')\"-->\n<!--                @remove=\"removeExpense(expense.id)\"-->\n<!--                @save=\"updateExpense(expense.id)\"-->\n<!--              />-->\n<!--            </td>-->\n<!--          </tr>-->\n<!--        </tbody>-->\n<!--      </table>-->\n      <spending-table\n        :expenses=\"expenses\"\n        @update-expense=\"updateExpense\"\n        @remove-expense=\"removeExpense\"\n      />\n    </div>\n\n    <teleport to=\"body\">\n      <main-loader v-if=\"isLoading\" />\n    </teleport>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nimport CustomInput from '@/components/CustomInput'\n// import ActionButtons from '@/components/ActionButtons'\nimport SpendingTable from './SpendingTable'\nimport MainLoader from '@/components/MainLoader'\n\nimport { hardcodedExpenses } from '../../../hardcodedData'\n\nexport default {\n  name: 'SpendingPage',\n\n  components: {\n    CustomInput,\n    // ActionButtons,\n    SpendingTable,\n    MainLoader\n  },\n\n  data() {\n    return {\n      foodExpense: '',\n      utilityExpense: '',\n      otherExpense: '',\n      dateExpensePersonal: '',\n      expenseType: {},\n      expenses: [], //Масив для збереження списку витрат\n      editingExpenseId: '',\n      errors: {},\n      isLoading: false\n    }\n  },\n\n  dateRegex: /^\\d{4}-\\d{2}-\\d{2}$/,\n\n  computed: {\n    hasExpenses() {\n      return this.expenses && this.expenses.length\n    }\n  },\n\n  mounted() {\n    //Викликаємо GET запит при завантаженні компонентів\n    this.getAllExpenses();\n  },\n\n  methods: {\n    // setIsEditingExpense(id) {\n    //   console.log('setIsEditingExpense: ', id);\n    //   this.editingExpenseId = id\n    // },\n    //\n    // checkIsEditingExpense(id) {\n    //   return this.editingExpenseId === id\n    // },\n\n    async updateExpense(expense) {\n      console.log('updateExpense expense: ', expense);\n      try {\n        this.isLoading = true\n\n        // TODO: Make api for the update expense\n        // await axios.put('/personal_expenses/api/expenses', expense)\n        await this.getAllExpenses()\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async removeExpense(id) {\n      console.log('removeExpense id: ', id);\n      try {\n        this.isLoading = true\n        console.log('Removed expense id: ', id);\n        // TODO: Make api for the delete expense by id\n        // await axios.delete('/personal_expenses/api/expenses', expenseId)\n        await this.getAllExpenses()\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async getAllExpenses() {\n      console.log('getAllExpenses', hardcodedExpenses);\n      try {\n        this.isLoading = true\n\n        // const response = await axios.get('/personal_expenses/api/expenses')\n\n        // this.expenses = response.data;\n        this.expenses = hardcodedExpenses;\n        console.log('Список витрат успішно отриманий:', this.expenses);\n      } catch(error) {\n        console.error('Помилка при отриманні списку витрат:', error);\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    changeField({ fieldName, value }) {\n      this[fieldName] = value\n    },\n\n    validateDate() {\n      this.errors.dateExpensePersonal = ''\n\n      if (!this.dateExpensePersonal) {\n        this.errors.dateExpensePersonal = 'Не вказана дата'\n        return false\n      }\n\n      if (!this.$options.dateRegex.test(this.dateExpensePersonal)) {\n        this.errors.dateExpensePersonal = 'Невірний формат дати'\n        return false\n      }\n\n      return true\n    },\n\n    async sendSpending(e) {\n      e.preventDefault();\n\n      const isValid = this.validateDate()\n\n      if (!isValid) {\n        return\n      }\n\n      try {\n        this.isLoading = true\n\n        await axios.post('/personal_expenses/api/expenses', {\n          foodExpense: this.foodExpense,\n          utilityExpense: this.utilityExpense,\n          otherExpense: this.otherExpense,\n          dateExpensePersonal: this.dateExpensePersonal,\n          expenseType: this.expenseType.value\n        })\n\n        await this.getAllExpenses()\n      } catch (error) {\n        console.error('Помилка при додаванні витрати:', error);\n      } finally {\n        this.isLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"../../css/variables\";\n\n.spending {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n\n  &:after {\n    position: absolute;\n    left: 400px;\n    top: 0;\n    bottom: 0;\n    border-left: 1px solid $main;\n    content: '';\n  }\n\n  .column {\n    width: 400px;\n    padding: 20px;\n\n    &:last-child {\n      position: absolute;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      width: calc(100% - 400px);\n      overflow-y: auto;\n    }\n  }\n}\n\n.data-table {\n  width: 100%;\n  border-collapse:collapse;\n  border-spacing:0;\n\n  tr {\n    background: $alt-field-background;\n  }\n\n  tbody tr {\n    &:nth-child(odd) {\n      background: $field-background;\n    }\n  }\n\n  th,\n  td {\n    padding: 10px;\n\n    &:last-child {\n      width: 100px;\n    }\n  }\n\n  th {\n    text-align: left;\n    border-bottom: solid 1px $main;\n\n    &:nth-child(1) {\n      width: 100px;\n    }\n  }\n}\n\n@media (max-width: 1024px) {\n  .spending {\n    position: static;\n\n    &:after {\n      display: none;\n    }\n\n    .column,\n    .column:last-child {\n      position: static;\n      width: 100%;\n    }\n\n    .column:last-child {\n      border: 0;\n\n      &:before {\n        display: block;\n        border-top: solid 1px $main;\n        padding: 20px 0 0;\n        content: '';\n      }\n    }\n\n    &.single-column .column:last-child:before {\n      border: 0;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}